    Object findDuplicate(def duplicates, def predicateDuplicate){
      for(def duplicate:duplicates){
        if(duplicate.sourceUid == predicateDuplicate.sourceUid){return duplicate}
      }
      return null;
    }

    Object omitRules(def duplicate){
    if(duplicate.rules == null){return duplicate;}

    HashMap result = new HashMap();
    result.putAll(duplicate);
    result.remove('rules');

    return result;
    }

    int addNx(ArrayList duplicates, def duplicate){
      if(findDuplicate(duplicates, duplicate) == null){
        duplicates.add(duplicate);
      }

      return duplicates.size();
    }

    int findDuplicateIndex(def duplicates, def predicateDuplicate){
      for(def duplicate:duplicates){
        if(duplicate.sourceUid == predicateDuplicate.sourceUid){return duplicates.indexOf(duplicate)}
      }
      return -1;
    }

    int replaceIxOrAddNx(ArrayList duplicates, def duplicate){
      int duplicateIndex = findDuplicateIndex(duplicates, duplicate);

      if( duplicateIndex == -1 ){
        duplicates.add(duplicate);
      } else {
        duplicates.set(duplicateIndex, duplicate);
      }

      return duplicates.size();
    }

    boolean hasTransDuplicate(ArrayList duplicates){
          for(def duplicate:duplicates){
            if(duplicate.rules == null){return true}
          }
          return false;
    }

    if(ctx._source.business == null){
        ctx._source.business= new HashMap();
    }

    if(ctx._source.business.duplicates == null){
      ctx._source.business.duplicates = new ArrayList();
    }

    if(params.duplicatesBucket == null){
      params.duplicatesBucket = new ArrayList();
    }

    if(params.initialSourceUid == ctx._source.sourceUid){
        ctx._source.business.duplicateRules = params.duplicateRules;
        for(def duplicate:params.duplicatesBucket ){
          if(duplicate.sourceUid == ctx._source.sourceUid){
            continue;
          }

          replaceIxOrAddNx(ctx._source.business.duplicates, duplicate);
        }
    } else {
       for(def duplicate:params.duplicatesBucket ){
          if(duplicate.sourceUid == ctx._source.sourceUid){
            continue;
          }

          addNx(ctx._source.business.duplicates, omitRules(duplicate));
        }
    }



    ctx._source.business.isDuplicate = ctx._source.business.duplicates.size() > 0 ? true: false;

    ctx._source.business.hasTransDuplicate = hasTransDuplicate(ctx._source.business.duplicates);

    ctx._source.business.sources = params.sources;


    if(params.sourceUidChain != null){
        ctx._source.business.sourceUidChain = params.sourceUidChain;
    }

    if(ctx._source.technical == null){
        ctx._source.technical = new HashMap();
    }

    Date date = new Date();
    ctx._source.technical.put("modificationDate", date.getTime());
